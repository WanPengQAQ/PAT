#define _CRT_SECURE_NO_WARNINGS
#include<cstdio>
#include<stdlib.h>
#include<vector>
#include<algorithm>
#include<queue>
using namespace std;
#define MAX 100

struct node {
	int left, right;
	int key;
};
struct node a[MAX];
vector<int> nums;

int index = 0;
int res[MAX];
void solve(int Root) 
{
	if (a[Root].left != -1) {
	
		solve(a[Root].left);
	}

	//if (a[Root].left == -1 && a[Root].right == -1) //这是根
	a[Root].key = nums[index++];

	if (a[Root].right != -1) {

		solve(a[Root].right);
	}

}

void level(int Root) {
	queue<int>q;

	q.push(Root);

	int flag = 1;
	while (!q.empty()) {
		int x = q.front();
		q.pop();

		if (flag == 1) {
			flag = 0;
			printf("%d", a[x].key);
		}
		else
			printf(" %d", a[x].key);


		if (a[x].left != -1)
			q.push(a[x].left);

		if (a[x].right != -1)
			q.push(a[x].right);

	}
}

int cmp(int a, int b)
{
	return a < b;
}
int main()
{
	int N;
	scanf("%d", &N);

	
	for (int i = 0; i < N; i++) 
		scanf("%d %d", &a[i].left, &a[i].right);

	int x;
	for (int i = 0; i < N; i++) {
		scanf("%d", &x);
		nums.push_back(x);
	}
	
	sort(nums.begin(), nums.end(), cmp);

	solve(0);

	level(0);

	system("pause");
	return 0;
}
